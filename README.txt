Для запуска системы необходимо запустить сначала main в классе Server, а затем в Client.
Я знаю, что в задании было сказано приложить jar файл,
но мне так и не удалось его корректно собрать, чтобы Server и Client запускались одновременно. =(

Поэтому, пожалуйста, запустите код из среды разработки (он писался в IntellijIdea).

Логин: admin
Пароль: admin

Глобальные настройки системы заданы в "src/main/resources/config.properties".

Меню программы:
    "0" - Получение списка всех студентов. Студенты отсортированы по имени.
	"1" - Получение списка студентов с конкретным именем. Студенты с одинаковым именем отсортированы по id.
	"2" - Получение информации о студенте по id. Если такого id не существует, возвращается null.
	"3" - Добавление нового студента по имени. Id устанавливается автоматически: наименьшее значение из отсутствующих в системе.
	"4" - Удаление студента по id. Если такого id не существует, возвращается null.

При первичном обращении к серверу, содержимое файла "jsonString.txt" скачивается в файл "temp.txt".
Строка в формате jSON парсится в объект java - экземпляр класса Students.
Поскольку использование сторонних библиотек было запрещено, пришлось писать парсинг в обе стороны вручную
(методы parseJSONtoJavaObject(String fileName) и parseStudentsObjectToJson(Students students)).
После преобразования json строки в объект класса Students, все операции производятся над данным объектом,
до тех пор, пока данные не отсылаются обратно на сервер. В этот момент файл "temp.txt" обновляется (перезаписывается)
и его содержимое отправляется на сервер, где данные сохраняются в исходный файл "jsonString.txt".
При сохранении данных в файлы, актуальный список студентов предварительно сортируется по id.
Если после операции "6" снова запросить какую-нибудь операцию, файл "jsonString.txt" будет заново скачиваться с сервера.

    "5" обновляет содержимое "temp.txt", печатает его в консоли, но не отсылает данные на сервер.
    "6" обновляет содержимое "temp.txt", печатает его в консоли, и отсылает данные на сервер.
    "7" завершает работу программы, файл "temp.txt" удаляется.
        Автоматического обновления данных на сервере (jsonString.txt) не происходит.


Я написала Unit тесты на функции, которые не участвуют во взаимодействии с сервером и пересылкой файлов. Как это сделать я не знаю. =(
Тесты на функции, работающие с локальными данными, и использующиеся в операциях "0-4" находятся в папке "src/test/java".
Они собраны в Test Suite и могут быть запущены все сразу через запуск "testng.xml" файла, или через вызов "mvn test" из папки проекта, так как "testng.xml" указан в <suiteXmlFiles> в "pom.xml" проекта.




